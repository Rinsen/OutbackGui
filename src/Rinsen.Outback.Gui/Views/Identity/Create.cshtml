@model Rinsen.Outback.Gui.Models.CreateIdentityModel
@{
    Layout = "_LayoutIdentity";
}
<style>
    html,
    body {
        height: 100%;
    }

    body {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-align: center;
        align-items: center;
        padding-top: 40px;
        padding-bottom: 40px;
        background-color: #f5f5f5;
    }

    .form-signup {
        width: 100%;
        max-width: 330px;
        padding: 15px;
        margin: auto;
    }

        .form-signup .form-control {
            position: relative;
            box-sizing: border-box;
            height: auto;
            padding: 10px;
            font-size: 16px;
        }

    .field-validation-error {
        color: red;
        font-size: smaller;
    }

    /*.form-signin .checkbox {
            font-weight: 400;
        }



            .form-signin .form-control:focus {
                z-index: 2;
            }

        .form-signin input[type="email"] {
            margin-bottom: -1px;
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }

        .form-signin input[type="password"] {
            margin-bottom: 10px;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }

    .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    @@media (min-width: 768px) {
        .bd-placeholder-img-lg {
            font-size: 3.5rem;
        }
    }*/
</style>
@section Scripts
{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        var settings = {
            validClass: "is-valid",
            errorClass: "is-invalid"

        };
        $.validator.setDefaults(settings);
        $.validator.unobtrusive.options = settings;
    </script>
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}

<form asp-action="Create" method="POST" class="needs-validation form-signup" novalidate>
    <h1 class="h3 mb-3 font-weight-normal">Please sign in</h1>
    <div class="form-group">
        <label asp-for="GivenName"></label>
        <input class="form-control" asp-for="GivenName" />
        <span asp-validation-for="GivenName"></span>
    </div>
    <div class="form-group">
        <label asp-for="Surname"></label>
        <input class="form-control" asp-for="Surname" />
        <span asp-validation-for="Surname"></span>
    </div>
    <div class="form-group">
        <label asp-for="Password"></label>
        <input class="form-control" asp-for="Password" />
        <span asp-validation-for="Password"></span>
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword"></label>
        <input class="form-control" asp-for="ConfirmPassword" />
        <span asp-validation-for="ConfirmPassword"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input class="form-control" asp-for="Email" />
        <span asp-validation-for="Email"></span>
    </div>

    <div class="form-group">
        <label asp-for="PhoneNumber"></label>
        <input class="form-control" asp-for="PhoneNumber" />
        <span asp-validation-for="PhoneNumber"></span>
    </div>

    <div class="form-group">
        <label asp-for="InviteCode"></label>
        <input class="form-control" asp-for="InviteCode" />
        <span asp-validation-for="InviteCode"></span>
    </div>

    <button class="btn btn-lg btn-primary btn-block" type="submit">Sign up</button>
</form>